import"./modulepreload-polyfill.js";console.log("üß† EchoMind popup v0.4.0 Pro Edition loaded");const S=document.getElementById("summarizeBtn"),B=document.getElementById("explainBtn"),L=document.getElementById("proofreadBtn"),$=document.getElementById("translateBtn"),P=document.getElementById("vaultBtn"),C=document.getElementById("clearVaultBtn"),M=document.getElementById("status"),h=document.getElementById("summaryBox"),K=document.getElementById("settingsBtn"),D=document.getElementById("settingsPanel"),z=document.getElementById("aiToggle"),H=document.getElementById("apiKeyInput"),U=document.getElementById("saveSettingsBtn"),g=document.getElementById("proBox"),m=document.getElementById("proStatus"),b=document.getElementById("upgradeMonthly"),w=document.getElementById("upgradeAnnual"),W="/api/createCheckoutSession";function r(e,n="info"){M.textContent=e,M.className=`status ${n}`}function p(e){e.classList.add("loading"),setTimeout(()=>e.classList.remove("loading"),1500)}function O(){h.classList.add("thinking")}function v(){h.classList.remove("thinking")}async function q(){try{const{sourceTabId:e}=await chrome.storage.local.get("sourceTabId");let n=null;if(e)n=e,console.log("Using stored tab ID:",n);else{const a=await chrome.tabs.query({active:!0,currentWindow:!1});a&&a.length>0&&a[0].id&&(n=a[0].id,console.log("Using active tab ID:",n))}if(!n)return console.log("No valid tab ID found"),"";const[{result:t}]=await chrome.scripting.executeScript({target:{tabId:n},func:()=>window.getSelection().toString()});return t||""}catch(e){return console.log("Cannot access tab:",e),""}}async function F(e){return new Promise(n=>{chrome.runtime.sendMessage(e,t=>{const a=chrome.runtime.lastError;a?(console.warn("‚ö†Ô∏è Message failed:",a),n(null)):n(t)})})}async function V(e){if(!e)return"No text selected.";const n=e.split(" ");return`üîê Local Summary:
${n.slice(0,60).join(" ")+(n.length>60?"‚Ä¶":"")}

üí° Explanation:
This summary condenses the passage and explains why it may be relevant.`}async function N(e,n){var t,a,o;try{return`‚òÅÔ∏è AI Summary:
${((o=(a=(t=(await(await fetch("https://api.openai.com/v1/chat/completions",{method:"POST",headers:{"Content-Type":"application/json",Authorization:`Bearer ${n}`},body:JSON.stringify({model:"gpt-4o-mini",messages:[{role:"system",content:`Provide a concise 2-part answer:

1Ô∏è‚É£ Summary ‚Äì 4‚Äì6 short paragraphs capturing key ideas.
2Ô∏è‚É£ Explanation ‚Äì why these points matter or what insights they reveal.`},{role:"user",content:e}]})})).json()).choices)==null?void 0:t[0])==null?void 0:a.message)==null?void 0:o.content)||"No result."}`}catch(s){return console.error(s),"‚ö†Ô∏è Cloud summarizer error."}}async function R(){var e;try{if(r("Connecting‚Ä¶"),!await F({type:"ping"})){r("‚ö†Ô∏è Background inactive ‚Äî retrying‚Ä¶","warn"),setTimeout(R,1e3);return}r("Ready ‚úÖ");const{pendingSummary:t,pendingMode:a,aiSettings:o,targetLang:s}=await chrome.storage.local.get(["pendingSummary","pendingMode","aiSettings","targetLang"]);if(o&&(z.checked=o.enabled,H.value=o.key||""),t){console.log(`üì• Auto processing: ${a||"summarize"}`),O();const c=t,l=o==null?void 0:o.key,d=(o==null?void 0:o.enabled)&&l,i=a||"summarize",y=s||"English";let u="Summary",f=c;switch(i){case"explain":u="Explanation",f=`Explain this passage clearly and briefly:

${c}`;break;case"proofread":u="Proofread Result",f=`Proofread and correct the following text, improving grammar and clarity but keeping the meaning:

${c}`;break;case"translate":u=`Translation (${y})`,f=`Translate this text naturally into ${y}:

${c}`;break;default:u="Summary",f=`Summarize this text and briefly explain why it matters:

${c}`;break}const k=d?await N(f,l):await V(c);h.setAttribute("data-mode",i),h.innerHTML=`<strong>${u}:</strong><br>${k.replace(/\n/g,"<br>")}`,h.scrollTop=0,await chrome.storage.local.set({lastSummaryLength:k.length}),v(),r(`${u} complete ‚úÖ`);const x=((e=(await chrome.storage.local.get("vaultData")).vaultData)==null?void 0:e.entries)||[];x.push({text:c,summary:k,date:new Date().toISOString(),mode:i,lang:y||null}),await chrome.storage.local.set({vaultData:{entries:x}}),await chrome.storage.local.remove(["pendingSummary","pendingMode","targetLang","sourceTabId"])}}catch(n){console.error("üí´ Init error:",n),r("Error initializing","error")}}async function E(e,n="English"){var t;try{O(),r(`Processing ${e}...`);const a=await q();if(!a.trim()){v(),r("Please highlight some text first ‚ö†Ô∏è","warn");return}const{aiSettings:o}=await chrome.storage.local.get("aiSettings"),s=o==null?void 0:o.key,c=(o==null?void 0:o.enabled)&&s;let l="",d="";switch(e){case"explain":l="Explanation",d=`Explain this passage clearly and briefly:

${a}`;break;case"proofread":l="Proofread Result",d=`Proofread and correct the following text, improving grammar and clarity but keeping the meaning:

${a}`;break;case"translate":l=`Translation (${n})`,d=`Translate this text naturally into ${n}:

${a}`;break;default:l="Summary",d=`Summarize this text and briefly explain why it matters:

${a}`;break}const i=c?await N(d,s):await V(a);h.setAttribute("data-mode",e),h.innerHTML=`<strong>${l}:</strong><br>${i.replace(/\n/g,"<br>")}`,h.scrollTop=0,await chrome.storage.local.set({lastSummaryLength:i.length}),v(),r(`${l} complete ‚úÖ`);const u=((t=(await chrome.storage.local.get("vaultData")).vaultData)==null?void 0:t.entries)||[];u.push({text:a,summary:i,date:new Date().toISOString(),mode:e,lang:n||null}),await chrome.storage.local.set({vaultData:{entries:u}}),await chrome.storage.local.remove("sourceTabId")}catch(a){console.error(`üí´ ${e} error:`,a),v(),r(`Error in ${e}`,"error")}}S.addEventListener("click",()=>{p(S),E("summarize")});B.addEventListener("click",()=>{p(B),E("explain")});L.addEventListener("click",()=>{p(L),E("proofread")});$.addEventListener("click",async()=>{p($);const e=prompt("Translate to which language?","Spanish");e&&e.trim()?await E("translate",e.trim()):r("Translation cancelled","warn")});P.addEventListener("click",async()=>{p(P);const e=document.getElementById("vaultContainer"),n=document.getElementById("summaryBox"),t=e.querySelectorAll(".filter"),a=document.getElementById("vaultEntries");n.classList.add("hidden"),e.classList.remove("hidden");const{vaultData:o}=await chrome.storage.local.get("vaultData"),s=(o==null?void 0:o.entries)||[];if(s.length===0){a.innerHTML="<p>Vault is empty.</p>",r("Vault loaded ‚úÖ");return}const c=l=>{t.forEach(i=>i.classList.toggle("active",i.dataset.filter===l));const d=l==="all"?s:s.filter(i=>i.mode===l);a.innerHTML=d.length===0?`<p>No entries found for "${l}".</p>`:d.map((i,y)=>`
          <div class="vault-entry">
            <strong>#${y+1} ‚Äì ${i.mode.toUpperCase()}${i.lang?" ("+i.lang+")":""}</strong><br>
            <small>${new Date(i.date).toLocaleString()}</small><br>
            <p>${i.summary.replace(/\n/g,"<br>")}</p>
          </div>`).join("<hr>")};c("all"),t.forEach(l=>l.addEventListener("click",()=>c(l.dataset.filter))),r("Vault loaded ‚úÖ")});C.addEventListener("click",async()=>{confirm("Clear all Vault data?")&&(p(C),await chrome.storage.local.clear(),h.textContent="",r("Vault cleared üßπ"))});K.addEventListener("click",()=>{D.classList.toggle("hidden")});U.addEventListener("click",async()=>{const e={enabled:z.checked,key:H.value.trim()};await chrome.storage.local.set({aiSettings:e}),D.classList.add("hidden"),r("Settings saved ‚úÖ")});const I=document.getElementById("openDashboardBtn");I==null||I.addEventListener("click",async()=>{let e=!1;try{await new Promise((t,a)=>{const o=setTimeout(()=>a(new Error("Dashboard timeout")),1e3);chrome.runtime.openOptionsPage(()=>{clearTimeout(o),chrome.runtime.lastError?a(chrome.runtime.lastError):t()})}),e=!0}catch(n){console.warn("‚ö†Ô∏è Dashboard open failed or timed out:",n)}e||Y()});function Y(){const e=document.getElementById("app");e.style.display="none";const n=document.createElement("div");n.className="mini-dashboard",n.innerHTML=`
    <h3>‚öôÔ∏è EchoMind Mini Dashboard</h3>
    <p style="color: #aaa; font-size: 12px;">Fallback mode - full dashboard unavailable</p>
    <label>
      <input type="checkbox" id="miniAiToggle"> Enable Cloud AI (OpenAI)
    </label><br>
    <textarea id="miniApiKey" placeholder="Enter your OpenAI API key here (sk-...)"></textarea><br>
    <button id="miniSave">üíæ Save Settings</button>
    <button id="miniBack">‚Üê Back</button>
    <hr style="border-color: #333; margin: 12px 0;">
    <button id="miniClearVault" style="background: #ff4444; color: white;">üßπ Clear Vault</button>
  `,document.body.appendChild(n),chrome.storage.local.get("aiSettings",({aiSettings:t})=>{t&&(document.getElementById("miniAiToggle").checked=t.enabled||!1,document.getElementById("miniApiKey").value=t.key||"")}),document.getElementById("miniSave").addEventListener("click",async()=>{const t={enabled:document.getElementById("miniAiToggle").checked,key:document.getElementById("miniApiKey").value.trim()};await chrome.storage.local.set({aiSettings:t}),r("Settings saved ‚úÖ"),setTimeout(()=>{n.remove(),e.style.display="block"},1500)}),document.getElementById("miniClearVault").addEventListener("click",async()=>{confirm("‚ö†Ô∏è Clear all vault entries? This cannot be undone!")&&(await chrome.storage.local.remove("vaultData"),r("Vault cleared üßπ"))}),document.getElementById("miniBack").addEventListener("click",()=>{n.remove(),e.style.display="block"})}const T=document.getElementById("backToMainBtn");T==null||T.addEventListener("click",()=>{const e=document.getElementById("vaultContainer"),n=document.getElementById("summaryBox");e.classList.add("hidden"),n.classList.remove("hidden"),r("Ready ‚úÖ")});function A(e,n="info"){const t=document.createElement("div");t.textContent=e,t.style.position="fixed",t.style.bottom="20px",t.style.left="50%",t.style.transform="translateX(-50%)",t.style.padding="10px 20px",t.style.borderRadius="8px",t.style.fontSize="0.9rem",t.style.zIndex="9999",t.style.boxShadow="0 4px 12px rgba(0, 0, 0, 0.3)",t.style.transition="all 0.3s ease",n==="success"?(t.style.background="rgba(34, 197, 94, 0.9)",t.style.color="white"):n==="error"?(t.style.background="rgba(239, 68, 68, 0.9)",t.style.color="white"):(t.style.background="rgba(59, 130, 246, 0.9)",t.style.color="white"),document.body.appendChild(t),setTimeout(()=>{t.style.opacity="1"},10),setTimeout(()=>{t.style.opacity="0",setTimeout(()=>t.remove(),300)},2500)}async function J(){try{let{userEmail:e}=await chrome.storage.local.get("userEmail");if(e||(e="publicuser@echomind.ai",console.log("No user email found, using public email for checkout")),(await response.json()).status==="active"){console.log("‚úÖ EchoMind Pro verified active"),localStorage.setItem("isProActive","true"),localStorage.setItem("proActivatedAt",new Date().toISOString()),m==null||m.classList.remove("hidden"),g==null||g.classList.add("hidden"),r("‚ú® Pro Active","success");const t=localStorage.getItem("lastProToast"),a=Date.now();return(!t||a-parseInt(t)>36e5)&&(A("‚ú® EchoMind Pro activated ‚Äî welcome back!","success"),localStorage.setItem("lastProToast",a.toString())),localStorage.getItem("forgeWelcomeShown")||setTimeout(()=>{const s=document.getElementById("forge-welcome-popup");s&&(s.classList.remove("hidden"),s.style.opacity="1",s.style.transform="translateY(0)",s.style.animation="forgePulseText 4s ease-in-out 1",setTimeout(()=>{s.style.opacity="0",s.style.transform="translateY(10px)",localStorage.setItem("forgeWelcomeShown","true"),setTimeout(()=>{s.classList.add("hidden")},1e3)},5e3))},1500),!0}else return console.log("‚ö†Ô∏è EchoMind Pro inactive, showing upgrade box"),localStorage.setItem("isProActive","false"),m==null||m.classList.add("hidden"),g==null||g.classList.remove("hidden"),!1}catch(e){return console.error("Error checking subscription:",e),m==null||m.classList.add("hidden"),g==null||g.classList.remove("hidden"),A("‚ö†Ô∏è Could not verify Pro status. Try again later.","error"),!1}}async function j(e){const n=e==="monthly"?b:w,t=n.innerHTML;try{n.innerHTML='<span style="font-size: 0.9rem;">‚è≥ Loading...</span>',n.disabled=!0,console.log(`Creating ${e} checkout session...`);const a=await fetch(`${W}?plan=${e}`,{method:"POST",headers:{"Content-Type":"application/json"}});if(!a.ok)throw new Error(`HTTP ${a.status}: ${a.statusText}`);const o=await a.json();if(o.url)console.log("‚úÖ Checkout session created:",o.sessionId),chrome.tabs.create({url:o.url}),r(`Opening ${e} checkout...`,"success");else throw new Error("No checkout URL returned")}catch(a){console.error("‚ùå Error creating checkout session:",a),r("Checkout failed. Please try again.","error"),alert(`Failed to create checkout session: ${a.message}`),n.innerHTML=t,n.disabled=!1}}b==null||b.addEventListener("click",()=>j("monthly"));w==null||w.addEventListener("click",()=>j("annual"));function X(){const e=m;!e||e.classList.contains("hidden")||(e.style.animation="forgePulse 2s ease-in-out 1",setTimeout(()=>{e.style.animation=""},2e3))}function _(){const e=document.createElement("canvas");e.id="popup-confetti",e.style.position="fixed",e.style.top="0",e.style.left="0",e.style.width="100%",e.style.height="100%",e.style.pointerEvents="none",e.style.zIndex="9999",document.body.appendChild(e);const n=e.getContext("2d");e.width=window.innerWidth,e.height=window.innerHeight;const t=Array.from({length:80},()=>({x:Math.random()*e.width,y:Math.random()*e.height-e.height,size:Math.random()*4+2,color:`hsl(${Math.random()*360}, 100%, 60%)`,speed:Math.random()*3+1,angle:Math.random()*Math.PI*2}));function a(){n.clearRect(0,0,e.width,e.height),t.forEach(o=>{o.y+=o.speed,o.x+=Math.sin(o.angle)*.3,o.y>e.height&&(o.y=-10),n.fillStyle=o.color,n.fillRect(o.x,o.y,o.size,o.size)}),requestAnimationFrame(a)}a(),setTimeout(()=>{e.style.opacity="0",e.style.transition="opacity 1s ease",setTimeout(()=>e.remove(),1e3)},3e3)}function G(){const e=localStorage.getItem("isProActive")==="true",n=localStorage.getItem("lastProCelebration"),t=Date.now();e&&(!n||t-parseInt(n)>36e5)&&setTimeout(()=>{console.log("üéä Celebrating Pro activation!"),X(),_(),localStorage.setItem("lastProCelebration",t.toString())},800)}J().then(()=>{G()});R();
