import"./modulepreload-polyfill.js";console.log("üß† EchoMind popup v0.4.0 Pro Edition loaded");const N=document.getElementById("summarizeBtn"),_=document.getElementById("explainBtn"),O=document.getElementById("proofreadBtn"),D=document.getElementById("translateBtn"),z=document.getElementById("vaultBtn"),H=document.getElementById("clearVaultBtn"),R=document.getElementById("status"),p=document.getElementById("summaryBox"),te=document.getElementById("settingsBtn"),h=document.getElementById("settingsPanel"),F=document.getElementById("aiToggle"),V=document.getElementById("apiKeyInput"),ae=document.getElementById("saveSettingsBtn"),g=document.getElementById("proBox"),m=document.getElementById("proStatus"),S=document.getElementById("upgradeMonthly"),k=document.getElementById("upgradeAnnual"),ne="https://us-central1-echomind-pro-launch.cloudfunctions.net/api/createCheckoutSession",oe="https://us-central1-echomind-pro-launch.cloudfunctions.net/api/checkSubscription";function r(e,t="info"){R.textContent=e,R.className=`status ${t}`}function b(e){e.classList.add("loading"),setTimeout(()=>e.classList.remove("loading"),1500)}function j(){p.classList.add("thinking")}function T(){p.classList.remove("thinking")}async function se(){try{const{sourceTabId:e}=await chrome.storage.local.get("sourceTabId");let t=null;if(e)t=e,console.log("Using stored tab ID:",t);else{const n=await chrome.tabs.query({active:!0,currentWindow:!1});n&&n.length>0&&n[0].id&&(t=n[0].id,console.log("Using active tab ID:",t))}if(!t)return console.log("No valid tab ID found"),"";const[{result:a}]=await chrome.scripting.executeScript({target:{tabId:t},func:()=>window.getSelection().toString()});return a||""}catch(e){return console.log("Cannot access tab:",e),""}}async function re(e){return new Promise(t=>{chrome.runtime.sendMessage(e,a=>{const n=chrome.runtime.lastError;n?(console.warn("‚ö†Ô∏è Message failed:",n),t(null)):t(a)})})}async function K(e){if(!e)return"No text selected.";const t=e.split(" ");return`üîê Local Summary:
${t.slice(0,60).join(" ")+(t.length>60?"‚Ä¶":"")}

üí° Explanation:
This summary condenses the passage and explains why it may be relevant.`}async function W(e,t){var a,n,o;try{return`‚òÅÔ∏è AI Summary:
${((o=(n=(a=(await(await fetch("https://api.openai.com/v1/chat/completions",{method:"POST",headers:{"Content-Type":"application/json",Authorization:`Bearer ${t}`},body:JSON.stringify({model:"gpt-4o-mini",messages:[{role:"system",content:`Provide a concise 2-part answer:

1Ô∏è‚É£ Summary ‚Äì 4‚Äì6 short paragraphs capturing key ideas.
2Ô∏è‚É£ Explanation ‚Äì why these points matter or what insights they reveal.`},{role:"user",content:e}]})})).json()).choices)==null?void 0:a[0])==null?void 0:n.message)==null?void 0:o.content)||"No result."}`}catch(l){return console.error(l),"‚ö†Ô∏è Cloud summarizer error."}}async function q(){var e;try{if(r("Connecting‚Ä¶"),!await re({type:"ping"})){r("‚ö†Ô∏è Background inactive ‚Äî retrying‚Ä¶","warn"),setTimeout(q,1e3);return}r("Ready ‚úÖ");const{pendingSummary:a,pendingMode:n,aiSettings:o,targetLang:l}=await chrome.storage.local.get(["pendingSummary","pendingMode","aiSettings","targetLang"]);if(o&&(F.checked=o.enabled,V.value=o.key||""),a){console.log(`üì• Auto processing: ${n||"summarize"}`),j();const d=a,s=o==null?void 0:o.key,i=(o==null?void 0:o.enabled)&&s,c=n||"summarize",y=l||"English";let u="Summary",E=d;switch(c){case"explain":u="Explanation",E=`Explain this passage clearly and briefly:

${d}`;break;case"proofread":u="Proofread Result",E=`Proofread and correct the following text, improving grammar and clarity but keeping the meaning:

${d}`;break;case"translate":u=`Translation (${y})`,E=`Translate this text naturally into ${y}:

${d}`;break;default:u="Summary",E=`Summarize this text and briefly explain why it matters:

${d}`;break}const x=i?await W(E,s):await K(d);p.setAttribute("data-mode",c),p.innerHTML=`<strong>${u}:</strong><br>${x.replace(/\n/g,"<br>")}`,p.scrollTop=0,await chrome.storage.local.set({lastSummaryLength:x.length}),T(),r(`${u} complete ‚úÖ`);const A=((e=(await chrome.storage.local.get("vaultData")).vaultData)==null?void 0:e.entries)||[];A.push({text:d,summary:x,date:new Date().toISOString(),mode:c,lang:y||null}),await chrome.storage.local.set({vaultData:{entries:A}}),await chrome.storage.local.remove(["pendingSummary","pendingMode","targetLang","sourceTabId"])}}catch(t){console.error("üí´ Init error:",t),r("Error initializing","error")}}async function B(e,t="English"){var a;try{j(),r(`Processing ${e}...`);const n=await se();if(!n.trim()){T(),r("Please highlight some text first ‚ö†Ô∏è","warn");return}const{aiSettings:o}=await chrome.storage.local.get("aiSettings"),l=o==null?void 0:o.key,d=(o==null?void 0:o.enabled)&&l;let s="",i="";switch(e){case"explain":s="Explanation",i=`Explain this passage clearly and briefly:

${n}`;break;case"proofread":s="Proofread Result",i=`Proofread and correct the following text, improving grammar and clarity but keeping the meaning:

${n}`;break;case"translate":s=`Translation (${t})`,i=`Translate this text naturally into ${t}:

${n}`;break;default:s="Summary",i=`Summarize this text and briefly explain why it matters:

${n}`;break}const c=d?await W(i,l):await K(n);p.setAttribute("data-mode",e),p.innerHTML=`<strong>${s}:</strong><br>${c.replace(/\n/g,"<br>")}`,p.scrollTop=0,await chrome.storage.local.set({lastSummaryLength:c.length}),T(),r(`${s} complete ‚úÖ`);const u=((a=(await chrome.storage.local.get("vaultData")).vaultData)==null?void 0:a.entries)||[];u.push({text:n,summary:c,date:new Date().toISOString(),mode:e,lang:t||null}),await chrome.storage.local.set({vaultData:{entries:u}}),await chrome.storage.local.remove("sourceTabId")}catch(n){console.error(`üí´ ${e} error:`,n),T(),r(`Error in ${e}`,"error")}}N.addEventListener("click",()=>{b(N),B("summarize")});_.addEventListener("click",()=>{b(_),B("explain")});O.addEventListener("click",()=>{b(O),B("proofread")});D.addEventListener("click",async()=>{b(D);const e=prompt("Translate to which language?","Spanish");e&&e.trim()?await B("translate",e.trim()):r("Translation cancelled","warn")});z.addEventListener("click",async()=>{b(z);const e=document.getElementById("vaultContainer"),t=document.getElementById("summaryBox"),a=e.querySelectorAll(".filter"),n=document.getElementById("vaultEntries");t.classList.add("hidden"),e.classList.remove("hidden");const{vaultData:o}=await chrome.storage.local.get("vaultData"),l=(o==null?void 0:o.entries)||[];if(l.length===0){n.innerHTML="<p>Vault is empty.</p>",r("Vault loaded ‚úÖ");return}const d=s=>{a.forEach(c=>c.classList.toggle("active",c.dataset.filter===s));const i=s==="all"?l:l.filter(c=>c.mode===s);n.innerHTML=i.length===0?`<p>No entries found for "${s}".</p>`:i.map((c,y)=>`
          <div class="vault-entry">
            <strong>#${y+1} ‚Äì ${c.mode.toUpperCase()}${c.lang?" ("+c.lang+")":""}</strong><br>
            <small>${new Date(c.date).toLocaleString()}</small><br>
            <p>${c.summary.replace(/\n/g,"<br>")}</p>
          </div>`).join("<hr>")};d("all"),a.forEach(s=>s.addEventListener("click",()=>d(s.dataset.filter))),r("Vault loaded ‚úÖ")});H.addEventListener("click",async()=>{confirm("Clear all Vault data?")&&(b(H),await chrome.storage.local.clear(),p.textContent="",r("Vault cleared üßπ"))});const f=document.getElementById("mainPanel"),P=document.getElementById("manageSubBtn"),J=document.getElementById("backBtn"),le="https://us-central1-echomind-pro-launch.cloudfunctions.net/api/createCustomerPortalSession";te.addEventListener("click",()=>{f.classList.add("translate-x-[-100%]","opacity-0"),f.classList.remove("translate-x-0","opacity-100"),setTimeout(()=>{f.style.display="none",h.classList.remove("hidden"),setTimeout(()=>{h.classList.remove("translate-x-full","opacity-0"),h.classList.add("translate-x-0","opacity-100")},30)},250)});J.addEventListener("click",()=>{h.classList.add("translate-x-full","opacity-0"),h.classList.remove("translate-x-0","opacity-100"),setTimeout(()=>{h.classList.add("hidden"),f.style.display="block",setTimeout(()=>{f.classList.remove("translate-x-[-100%]","opacity-0"),f.classList.add("translate-x-0","opacity-100")},30)},300)});const L=document.getElementById("portalOverlay"),v=document.getElementById("portalFrame");document.getElementById("portalLoader");const ie=document.getElementById("portalProgress"),ce=document.getElementById("closePortalBtn");async function Y(){try{r("Opening Stripe portal...","info");const e=localStorage.getItem("echomind_pro_email")||localStorage.getItem("userEmail")||localStorage.getItem("user_email");if(console.log("üîç Looking up portal for email:",e),!e||e==="publicuser@echomind.ai"){r("‚ö†Ô∏è Please complete a purchase first","error"),console.warn("No valid user email found in localStorage");return}const t=await fetch(le,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({email:e})});if(console.log("üì° Portal response status:",t.status),!t.ok){const n=await t.json().catch(()=>({}));throw console.error("‚ùå Portal error:",n),new Error(n.error||`HTTP ${t.status}: ${t.statusText}`)}const a=await t.json();if(console.log("‚úÖ Portal data received:",a),a.url)console.log("üöÄ Opening Stripe portal in new tab:",a.url),chrome.tabs.create({url:a.url}),r("‚úÖ Portal opened in new tab","success");else throw new Error("No portal URL received from server")}catch(e){console.error("‚ùå Error opening customer portal:",e),r(`‚ùå ${e.message||"Unable to open portal"}`,"error"),(e.message.includes("Customer not found")||e.message.includes("404"))&&r("‚ùå No subscription found. Please upgrade first.","error")}}function G(){L.classList.add("opacity-0"),L.style.pointerEvents="none",setTimeout(()=>{L.classList.add("hidden"),v.src="",v.classList.remove("loaded"),ie.style.width="0%"},400),r("Portal closed","info")}P.addEventListener("click",()=>{P.style.transform="scale(0.97)",setTimeout(()=>{P.style.transform="scale(1)"},150),Y()});ce.addEventListener("click",G);ae.addEventListener("click",async()=>{const e={enabled:F.checked,key:V.value.trim()};await chrome.storage.local.set({aiSettings:e}),h.classList.add("hidden"),r("Settings saved ‚úÖ")});const $=document.getElementById("openDashboardBtn");$==null||$.addEventListener("click",async()=>{let e=!1;try{await new Promise((a,n)=>{const o=setTimeout(()=>n(new Error("Dashboard timeout")),1e3);chrome.runtime.openOptionsPage(()=>{clearTimeout(o),chrome.runtime.lastError?n(chrome.runtime.lastError):a()})}),e=!0}catch(t){console.warn("‚ö†Ô∏è Dashboard open failed or timed out:",t)}e||de()});function de(){const e=document.getElementById("app");e.style.display="none";const t=document.createElement("div");t.className="mini-dashboard",t.innerHTML=`
    <h3>‚öôÔ∏è EchoMind Mini Dashboard</h3>
    <p style="color: #aaa; font-size: 12px;">Fallback mode - full dashboard unavailable</p>
    <label>
      <input type="checkbox" id="miniAiToggle"> Enable Cloud AI (OpenAI)
    </label><br>
    <textarea id="miniApiKey" placeholder="Enter your OpenAI API key here (sk-...)"></textarea><br>
    <button id="miniSave">üíæ Save Settings</button>
    <button id="miniBack">‚Üê Back</button>
    <hr style="border-color: #333; margin: 12px 0;">
    <button id="miniClearVault" style="background: #ff4444; color: white;">üßπ Clear Vault</button>
  `,document.body.appendChild(t),chrome.storage.local.get("aiSettings",({aiSettings:a})=>{a&&(document.getElementById("miniAiToggle").checked=a.enabled||!1,document.getElementById("miniApiKey").value=a.key||"")}),document.getElementById("miniSave").addEventListener("click",async()=>{const a={enabled:document.getElementById("miniAiToggle").checked,key:document.getElementById("miniApiKey").value.trim()};await chrome.storage.local.set({aiSettings:a}),r("Settings saved ‚úÖ"),setTimeout(()=>{t.remove(),e.style.display="block"},1500)}),document.getElementById("miniClearVault").addEventListener("click",async()=>{confirm("‚ö†Ô∏è Clear all vault entries? This cannot be undone!")&&(await chrome.storage.local.remove("vaultData"),r("Vault cleared üßπ"))}),document.getElementById("miniBack").addEventListener("click",()=>{t.remove(),e.style.display="block"})}const C=document.getElementById("backToMainBtn");C==null||C.addEventListener("click",()=>{const e=document.getElementById("vaultContainer"),t=document.getElementById("summaryBox");e.classList.add("hidden"),t.classList.remove("hidden"),r("Ready ‚úÖ")});function U(e,t="info"){const a=document.createElement("div");a.textContent=e,a.style.position="fixed",a.style.bottom="20px",a.style.left="50%",a.style.transform="translateX(-50%)",a.style.padding="10px 20px",a.style.borderRadius="8px",a.style.fontSize="0.9rem",a.style.zIndex="9999",a.style.boxShadow="0 4px 12px rgba(0, 0, 0, 0.3)",a.style.transition="all 0.3s ease",t==="success"?(a.style.background="rgba(34, 197, 94, 0.9)",a.style.color="white"):t==="error"?(a.style.background="rgba(239, 68, 68, 0.9)",a.style.color="white"):(a.style.background="rgba(59, 130, 246, 0.9)",a.style.color="white"),document.body.appendChild(a),setTimeout(()=>{a.style.opacity="1"},10),setTimeout(()=>{a.style.opacity="0",setTimeout(()=>a.remove(),300)},2500)}async function X(){try{let{userEmail:e}=await chrome.storage.local.get("userEmail");e||(e="publicuser@echomind.ai",console.log("No user email found, using public email for checkout"));const t=await fetch(`${oe}?email=${e}`,{method:"GET",headers:{"Content-Type":"application/json"}});if(!t.ok)throw new Error(`HTTP ${t.status}: ${t.statusText}`);const a=await t.json();if(a.status==="active"){console.log("‚úÖ EchoMind Pro verified active"),localStorage.setItem("isProActive","true"),localStorage.setItem("proActivatedAt",new Date().toISOString());const n=a.email||e;n&&n!=="publicuser@echomind.ai"&&(localStorage.setItem("echomind_pro_email",n),console.log("üíæ Saved user email for portal access:",n)),m==null||m.classList.remove("hidden"),g==null||g.classList.add("hidden"),r("‚ú® Pro Active","success");const o=localStorage.getItem("lastProToast"),l=Date.now();return(!o||l-parseInt(o)>36e5)&&(U("‚ú® EchoMind Pro activated ‚Äî welcome back!","success"),localStorage.setItem("lastProToast",l.toString())),localStorage.getItem("forgeWelcomeShown")||setTimeout(()=>{const s=document.getElementById("forge-welcome-popup");s&&(s.classList.remove("hidden"),s.style.opacity="1",s.style.transform="translateY(0)",s.style.animation="forgePulseText 4s ease-in-out 1",setTimeout(()=>{s.style.opacity="0",s.style.transform="translateY(10px)",localStorage.setItem("forgeWelcomeShown","true"),setTimeout(()=>{s.classList.add("hidden")},1e3)},5e3))},1500),!0}else return console.log("‚ö†Ô∏è EchoMind Pro inactive, showing upgrade box"),localStorage.setItem("isProActive","false"),m==null||m.classList.add("hidden"),g==null||g.classList.remove("hidden"),!1}catch(e){return console.error("Error checking subscription:",e),m==null||m.classList.add("hidden"),g==null||g.classList.remove("hidden"),U("‚ö†Ô∏è Could not verify Pro status. Try again later.","error"),!1}}async function Q(e){const t=e==="monthly"?S:k,a=t.innerHTML;try{t.innerHTML='<span style="font-size: 0.9rem;">‚è≥ Loading...</span>',t.disabled=!0,console.log(`Creating ${e} checkout session...`);const n=await fetch(`${ne}?plan=${e}`,{method:"POST",headers:{"Content-Type":"application/json"}});if(!n.ok)throw new Error(`HTTP ${n.status}: ${n.statusText}`);const o=await n.json();if(o.url)console.log("‚úÖ Checkout session created:",o.sessionId),chrome.tabs.create({url:o.url}),r(`Opening ${e} checkout...`,"success");else throw new Error("No checkout URL returned")}catch(n){console.error("‚ùå Error creating checkout session:",n),r("Checkout failed. Please try again.","error"),alert(`Failed to create checkout session: ${n.message}`),t.innerHTML=a,t.disabled=!1}}S==null||S.addEventListener("click",()=>Q("monthly"));k==null||k.addEventListener("click",()=>Q("annual"));function me(){const e=m;!e||e.classList.contains("hidden")||(e.style.animation="forgePulse 2s ease-in-out 1",setTimeout(()=>{e.style.animation=""},2e3))}function ue(){const e=document.createElement("canvas");e.id="popup-confetti",e.style.position="fixed",e.style.top="0",e.style.left="0",e.style.width="100%",e.style.height="100%",e.style.pointerEvents="none",e.style.zIndex="9999",document.body.appendChild(e);const t=e.getContext("2d");e.width=window.innerWidth,e.height=window.innerHeight;const a=Array.from({length:80},()=>({x:Math.random()*e.width,y:Math.random()*e.height-e.height,size:Math.random()*4+2,color:`hsl(${Math.random()*360}, 100%, 60%)`,speed:Math.random()*3+1,angle:Math.random()*Math.PI*2}));function n(){t.clearRect(0,0,e.width,e.height),a.forEach(o=>{o.y+=o.speed,o.x+=Math.sin(o.angle)*.3,o.y>e.height&&(o.y=-10),t.fillStyle=o.color,t.fillRect(o.x,o.y,o.size,o.size)}),requestAnimationFrame(n)}n(),setTimeout(()=>{e.style.opacity="0",e.style.transition="opacity 1s ease",setTimeout(()=>e.remove(),1e3)},3e3)}function Z(){const e=localStorage.getItem("isProActive")==="true",t=localStorage.getItem("lastProCelebration"),a=Date.now();e&&(!t||a-parseInt(t)>36e5)&&setTimeout(()=>{console.log("üéä Celebrating Pro activation!"),me(),ue(),localStorage.setItem("lastProCelebration",a.toString())},800)}X().then(()=>{Z()});q();function ee(){console.log("üîÑ Resetting UI state..."),["settingsPanel","portalOverlay"].forEach(a=>{const n=document.getElementById(a);n&&(n.classList.add("hidden"),n.style.pointerEvents="none",n.style.opacity="0",n.style.display="none")});const t=document.getElementById("mainPanel");t&&(t.classList.remove("hidden"),t.style.display="block",t.style.pointerEvents="auto",t.style.opacity="1",t.classList.remove("translate-x-[-100%]","opacity-0"),t.classList.add("translate-x-0","opacity-100")),v&&(v.src="",v.classList.remove("loaded")),console.log("‚úÖ UI state reset complete")}document.addEventListener("keydown",e=>{e.key==="Escape"&&(L.classList.contains("hidden")?h.classList.contains("hidden")?ee():J.click():G())});window.resetUIState=ee;let w=null;async function M(){const e=document.getElementById("planBadge"),t=document.getElementById("planName"),a=document.getElementById("planStatus"),n=document.getElementById("planManageBtn"),o=document.getElementById("proBox");if(!e||!t||!a||!n){console.warn("‚ö†Ô∏è Plan badge elements not found");return}try{const l=localStorage.getItem("echomind_pro_email")||localStorage.getItem("userEmail")||localStorage.getItem("user_email");if(!l||l==="publicuser@echomind.ai"){e.classList.add("hidden"),o&&o.classList.remove("hidden"),console.log("üì¶ No subscription - showing upgrade box");return}const d=localStorage.getItem("echomind_pro_status")==="true",s=localStorage.getItem("echomind_plan_type")||"starter";if(console.log("üîç Plan badge update:",{isPro:d,planType:s,userEmail:l}),!d){e.classList.add("hidden"),o&&o.classList.remove("hidden");return}e.classList.remove("hidden"),o&&o.classList.add("hidden");let i={text:"Starter Plan",status:"Free Tier Active",className:"starter",showManage:!1};s==="monthly"||s==="pro"?i={text:"Pro Plan",status:"Monthly Subscription Active",className:"pro",showManage:!0}:(s==="annual"||s==="yearly")&&(i={text:"Annual Plan",status:"Annual Subscription Active",className:"annual",showManage:!0}),e.className=`plan-badge ${i.className}`,t.textContent=`EchoMind ${i.text}`,a.textContent=i.status,i.showManage?(n.style.display="block",n.onclick=()=>{console.log(`üöÄ Opening Stripe portal for ${i.text}`),Y()}):n.style.display="none",console.log(`‚úÖ Plan badge updated: ${i.text}`)}catch(l){console.error("‚ùå Error updating plan badge:",l),e.classList.remove("hidden"),e.className="plan-badge starter",t.textContent="EchoMind Starter",a.textContent="Free tier active",n.style.display="none"}}function ge(){w&&(w(),w=null);const e=localStorage.getItem("echomind_pro_email")||localStorage.getItem("userEmail")||localStorage.getItem("user_email");if(!e||e==="publicuser@echomind.ai"){console.log("üì¶ No user email - skipping Firestore listener");return}try{const a=firebase.firestore().collection("user_subscription_status").doc(e);console.log("üëÇ Setting up real-time plan badge listener for:",e),w=a.onSnapshot(n=>{if(n.exists){const o=n.data();console.log("üîÑ Subscription data updated:",o),localStorage.setItem("echomind_pro_status",o.isPro?"true":"false"),localStorage.setItem("echomind_plan_type",o.planType||"starter"),localStorage.setItem("echomind_pro_email",e),M(),o.isPro&&r(`‚úÖ ${o.planType==="annual"?"Annual":"Pro"} plan active`,"success")}else console.log("üì≠ No subscription document found"),localStorage.setItem("echomind_pro_status","false"),localStorage.setItem("echomind_plan_type","starter"),M()},n=>{console.error("‚ùå Firestore listener error:",n)}),console.log("‚úÖ Real-time plan badge listener active")}catch(t){console.error("‚ùå Error setting up Firestore listener:",t)}}M();X().then(()=>{ge(),Z()});function pe(e,t=2500){const a=document.createElement("div");a.textContent=e,a.className="forge-toast animate-toast-fade",document.body.appendChild(a),setTimeout(()=>{a.style.opacity="1"},50),setTimeout(()=>{a.style.opacity="0"},t-500),setTimeout(()=>{a.remove()},t)}const I=document.getElementById("manageSubBtn");if(I){const e=I.cloneNode(!0);I.parentNode.replaceChild(e,I),e.addEventListener("click",()=>{const t="https://echomind-pro-launch.vercel.app/dashboard?from=success";console.log("üöÄ Opening Forge Cockpit at:",t),e.style.transform="scale(0.95)",setTimeout(()=>{e.style.transform="scale(1)"},150),pe("üöÄ Opening Forge Cockpit..."),setTimeout(()=>{chrome.tabs.create({url:t})},900)})}
